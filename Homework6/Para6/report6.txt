--------------------------

学籍番号 : 0000000
氏名 :

--------------------------

回答1 :
1.1) if文を使う代わりに取った方法について

Max3についてはopenCLのmax()関数を使う
i<numberの判断文はjavaのホスト側に処理する


回答3 :
3.1)
barrier(CLK_LOCAL_MEM_FENCE)の挿入箇所とその必要な理由

一回の処理ごとに（四つのグループを平均する処理）barrier(CLK_LOCAL_MEM_FENCE)を挿入する、これは他のワークグループの処理が完了を保証するためである。


3.2)
1ワークグループに属するワークアイテム数

4*4=16個



回答4 :
4.2)
スレッドセーフではないために生じたことが明瞭にわかる映像を作るにあたっ
て意図した点
（どうすれば誤った静止画像が頻発するか、どのような模様ならば誤りが明瞭か）

一つの縦線が左から右に



4.3)
録画機能がスレッドセーフでない原因

録画機能はcanvasの中のimageそのものを使ったが、imageは録画する途中で変わることがあるので、その時の録画は前の内容と今の内容が混ざっている可能性がある




スレッドセーフとするための改良方針

canvasの中のimageそのものではなくて、image画像をsynchronized的にコピーすればスレッドセーフになる



スレッドセーフとするためのソースコードの修正部分

録画機能の内部クラスShotのtarget.getImageをtaget,copyImageというsynchronized的な方法に変更した





今回の課題で特に学べたと感じたこと
